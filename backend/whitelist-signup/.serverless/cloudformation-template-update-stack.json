{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CreateAuthChallengeLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/noma-whitelist-triggers-prod-createAuthChallenge"
      }
    },
    "DefineAuthChallengeLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/noma-whitelist-triggers-prod-defineAuthChallenge"
      }
    },
    "PreSignUpLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/noma-whitelist-triggers-prod-preSignUp"
      }
    },
    "VerifyAuthChallengeLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/noma-whitelist-triggers-prod-verifyAuthChallenge"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "noma-whitelist-triggers",
                  "prod",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/noma-whitelist-triggers-prod*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/noma-whitelist-triggers-prod*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "noma-whitelist-triggers",
              "prod",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "CreateAuthChallengeLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/noma-whitelist-triggers/prod/1643635507775-2022-01-31T13:25:07.775Z/noma-whitelist-triggers.zip"
        },
        "Handler": "createAuthChallenge.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "noma-whitelist-triggers-prod-createAuthChallenge",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateAuthChallengeLogGroup"
      ]
    },
    "DefineAuthChallengeLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/noma-whitelist-triggers/prod/1643635507775-2022-01-31T13:25:07.775Z/noma-whitelist-triggers.zip"
        },
        "Handler": "defineAuthChallenge.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "noma-whitelist-triggers-prod-defineAuthChallenge",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DefineAuthChallengeLogGroup"
      ]
    },
    "PreSignUpLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/noma-whitelist-triggers/prod/1643635507775-2022-01-31T13:25:07.775Z/noma-whitelist-triggers.zip"
        },
        "Handler": "preSignUp.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "noma-whitelist-triggers-prod-preSignUp",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PreSignUpLogGroup"
      ]
    },
    "VerifyAuthChallengeLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/noma-whitelist-triggers/prod/1643635507775-2022-01-31T13:25:07.775Z/noma-whitelist-triggers.zip"
        },
        "Handler": "verifyAuthChallenge.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "noma-whitelist-triggers-prod-verifyAuthChallenge",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "VerifyAuthChallengeLogGroup"
      ]
    },
    "CreateAuthChallengeLambdaVersiongtXIAbcbsXMMqsCwrEtwLAA9wIInTcKpW2C7eXhSE9c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateAuthChallengeLambdaFunction"
        },
        "CodeSha256": "ruIQ0EkMeK5xPvKoj6TBdptql7cLlKFIW2sqf6yEHP4="
      }
    },
    "DefineAuthChallengeLambdaVersionRWAUYPqyDY06VMYbwUuf3oU113lzLiagnWYBSyv91k": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DefineAuthChallengeLambdaFunction"
        },
        "CodeSha256": "ruIQ0EkMeK5xPvKoj6TBdptql7cLlKFIW2sqf6yEHP4="
      }
    },
    "PreSignUpLambdaVersiondENw6FQX4PUztpeBB7GvUOJJkuhvR4jceD0oe0eE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PreSignUpLambdaFunction"
        },
        "CodeSha256": "ruIQ0EkMeK5xPvKoj6TBdptql7cLlKFIW2sqf6yEHP4="
      }
    },
    "VerifyAuthChallengeLambdaVersionP0je87fkWmySGofieNJCbuPgY7PCM6pyJcuneD8qw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "VerifyAuthChallengeLambdaFunction"
        },
        "CodeSha256": "ruIQ0EkMeK5xPvKoj6TBdptql7cLlKFIW2sqf6yEHP4="
      }
    },
    "CreateAuthChallengeCustomCognitoUserPool1": {
      "Type": "Custom::CognitoUserPool",
      "Version": 1,
      "DependsOn": [
        "CreateAuthChallengeLambdaFunction",
        "CustomDashresourceDashexistingDashcupLambdaFunction"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashexistingDashcupLambdaFunction",
            "Arn"
          ]
        },
        "FunctionName": "noma-whitelist-triggers-prod-createAuthChallenge",
        "UserPoolName": "noma-whitelist-prod",
        "UserPoolConfigs": [
          {
            "Trigger": "CreateAuthChallenge"
          }
        ]
      }
    },
    "DefineAuthChallengeCustomCognitoUserPool1": {
      "Type": "Custom::CognitoUserPool",
      "Version": 1,
      "DependsOn": [
        "DefineAuthChallengeLambdaFunction",
        "CustomDashresourceDashexistingDashcupLambdaFunction",
        "CreateAuthChallengeCustomCognitoUserPool1"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashexistingDashcupLambdaFunction",
            "Arn"
          ]
        },
        "FunctionName": "noma-whitelist-triggers-prod-defineAuthChallenge",
        "UserPoolName": "noma-whitelist-prod",
        "UserPoolConfigs": [
          {
            "Trigger": "DefineAuthChallenge"
          }
        ]
      }
    },
    "PreSignUpCustomCognitoUserPool1": {
      "Type": "Custom::CognitoUserPool",
      "Version": 1,
      "DependsOn": [
        "PreSignUpLambdaFunction",
        "CustomDashresourceDashexistingDashcupLambdaFunction",
        "DefineAuthChallengeCustomCognitoUserPool1"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashexistingDashcupLambdaFunction",
            "Arn"
          ]
        },
        "FunctionName": "noma-whitelist-triggers-prod-preSignUp",
        "UserPoolName": "noma-whitelist-prod",
        "UserPoolConfigs": [
          {
            "Trigger": "PreSignUp"
          }
        ]
      }
    },
    "VerifyAuthChallengeCustomCognitoUserPool1": {
      "Type": "Custom::CognitoUserPool",
      "Version": 1,
      "DependsOn": [
        "VerifyAuthChallengeLambdaFunction",
        "CustomDashresourceDashexistingDashcupLambdaFunction",
        "PreSignUpCustomCognitoUserPool1"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashexistingDashcupLambdaFunction",
            "Arn"
          ]
        },
        "FunctionName": "noma-whitelist-triggers-prod-verifyAuthChallenge",
        "UserPoolName": "noma-whitelist-prod",
        "UserPoolConfigs": [
          {
            "Trigger": "VerifyAuthChallengeResponse"
          }
        ]
      }
    },
    "IamRoleCustomResourcesLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "prod",
                  "noma-whitelist-triggers",
                  "custom-resources-lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "cognito-idp:ListUserPools",
                    "cognito-idp:DescribeUserPool",
                    "cognito-idp:UpdateUserPool"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:lambda:*:*:function:noma-whitelist-triggers-prod-createAuthChallenge"
                  },
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:lambda:*:*:function:noma-whitelist-triggers-prod-defineAuthChallenge"
                  },
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:lambda:*:*:function:noma-whitelist-triggers-prod-preSignUp"
                  },
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:lambda:*:*:function:noma-whitelist-triggers-prod-verifyAuthChallenge"
                  },
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:iam::*:role/*"
                  },
                  "Action": [
                    "iam:PassRole"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomDashresourceDashexistingDashcupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/noma-whitelist-triggers/prod/1643635507775-2022-01-31T13:25:07.775Z/custom-resources.zip"
        },
        "FunctionName": "noma-whitelist-triggers-prod-custom-resource-existing-cup",
        "Handler": "cognito-user-pool/handler.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs14.x",
        "Timeout": 180,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleCustomResourcesLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IamRoleCustomResourcesLambdaExecution"
      ]
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-noma-whitelist-triggers-prod-ServerlessDeploymentBucketName"
      }
    },
    "CreateAuthChallengeLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateAuthChallengeLambdaVersiongtXIAbcbsXMMqsCwrEtwLAA9wIInTcKpW2C7eXhSE9c"
      },
      "Export": {
        "Name": "sls-noma-whitelist-triggers-prod-CreateAuthChallengeLambdaFunctionQualifiedArn"
      }
    },
    "DefineAuthChallengeLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DefineAuthChallengeLambdaVersionRWAUYPqyDY06VMYbwUuf3oU113lzLiagnWYBSyv91k"
      },
      "Export": {
        "Name": "sls-noma-whitelist-triggers-prod-DefineAuthChallengeLambdaFunctionQualifiedArn"
      }
    },
    "PreSignUpLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PreSignUpLambdaVersiondENw6FQX4PUztpeBB7GvUOJJkuhvR4jceD0oe0eE"
      },
      "Export": {
        "Name": "sls-noma-whitelist-triggers-prod-PreSignUpLambdaFunctionQualifiedArn"
      }
    },
    "VerifyAuthChallengeLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "VerifyAuthChallengeLambdaVersionP0je87fkWmySGofieNJCbuPgY7PCM6pyJcuneD8qw"
      },
      "Export": {
        "Name": "sls-noma-whitelist-triggers-prod-VerifyAuthChallengeLambdaFunctionQualifiedArn"
      }
    }
  }
}