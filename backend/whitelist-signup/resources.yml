service: noma-whitelist-cognito

custom:
  USER_POOL_NAME: noma-whitelist-${opt:stage,self:provider.stage}
  REGION: ${env:REGION, 'eu-central-1'}

provider:
  name: aws
  region: ${self:custom.REGION}
  runtime: nodejs14.x

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        Policies:
          PasswordPolicy:
            MinimumLength: 30
            RequireLowercase: false
            RequireNumbers: false
            RequireSymbols: false
            RequireUppercase: false
        UserPoolName: ${self:custom.USER_POOL_NAME}
    UserPoolWebClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: UserPoolWebClient
        GenerateSecret: false
        UserPoolId: !Ref UserPool
        ExplicitAuthFlows:
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_CUSTOM_AUTH
        PreventUserExistenceErrors: ENABLED
    CognitoUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain: ${self:custom.USER_POOL_NAME} # what is before .auth.REGION.amazoncognito.com
        UserPoolId: !Ref UserPool

  Outputs:
    UserPoolId:
      Value:
        Ref: UserPool
    UserPoolDomain:
      Value: ${self:custom.USER_POOL_NAME}.auth.${self:custom.REGION}.amazoncognito.com
    UserPoolArn:
      Value:
        Fn::GetAtt: [UserPool, Arn]
    UserPoolName:
      Value: ${self:custom.USER_POOL_NAME}
    UserPoolWebClient:
      Value:
        Ref: UserPoolWebClient
